class Employee {
    private String name;
    private int empID;

    public Employee(String name, int empID) {
        this.name = name;
        this.empID = empID;
    }

    public String getName() {
        return name;
    }

    public int getempID() {
        return empID;
    }

    public double calculateSalary() {
        return 50000; 
    }
}

class Manager extends Employee {
    private double bonusPercent;

    public Manager(String name, int empID, double bonusPercent) {
        super(name, empID);
        this.bonusPercent = bonusPercent;
    }

    @Override
    public double calculateSalary() {
        
        double basicSalary = super.calculateSalary();
        return basicSalary + (basicSalary * (bonusPercent / 100));
    }
}

class Developer extends Employee {
    private String proglang;
    private double allowance = 5000; 

    public Developer(String name, int employeeID, String proglang) {
        super(name, employeeID);
        this.proglang = proglang;
    }

    @Override
    public double calculateSalary() {
        
        return super.calculateSalary() + allowance;
    }

    public String getproglang() {
        return proglang;
    }
}

public class CompanyEmployeeTest {
    public static void main(String[] args) {
        
        Manager manager = new Manager("kol", 1001, 10);
        Developer developer = new Developer("klaus", 2001, "Java");

        
        System.out.println("Manager Details:");
        System.out.println("Name: " + manager.getName());
        System.out.println("Employee ID: " + manager.getempId());
        System.out.println("Bonus Percentage: " + manager.calculateSalary());
        System.out.println();

        System.out.println("Developer Details:");
        System.out.println("Name: " + developer.getName());
        System.out.println("Employee ID: " + developer.getempID());
        System.out.println("Programming Language: " + developer.getproglang());
        System.out.println("Salary with Allowance: " + developer.calculateSalary());
    }
}
